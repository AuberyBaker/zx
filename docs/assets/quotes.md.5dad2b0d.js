import{_ as s,o as a,c as n,Q as o}from"./chunks/framework.54ce79f7.js";const g=JSON.parse('{"title":"Quotes","description":"","frontmatter":{},"headers":[],"relativePath":"quotes.md","filePath":"quotes.md"}'),l={name:"quotes.md"},p=o('<h1 id="quotes" tabindex="-1">Quotes <a class="header-anchor" href="#quotes" aria-label="Permalink to &quot;Quotes&quot;">​</a></h1><p>When passing arguments to <code>${...}</code> there is no need to add quotes. <strong>Quotes will be added automatically if needed.</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> name </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;foo &amp; bar&#39;</span></span>\n<span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">$</span><span style="color:#9ECBFF;">`mkdir ${</span><span style="color:#E1E4E8;">name</span><span style="color:#9ECBFF;">}`</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> name </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;foo &amp; bar&#39;</span></span>\n<span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">$</span><span style="color:#032F62;">`mkdir ${</span><span style="color:#24292E;">name</span><span style="color:#032F62;">}`</span></span></code></pre></div><p>For quotes <strong>zx</strong> uses special bash syntax (next commands are valid bash):</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">mkdir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">$&#39;foo &amp; bar&#39;</span></span>\n<span class="line"><span style="color:#B392F0;">$</span><span style="color:#B392F0;">&#39;ls&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">$&#39;-la&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">mkdir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">$&#39;foo &amp; bar&#39;</span></span>\n<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#6F42C1;">&#39;ls&#39;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">$&#39;-la&#39;</span></span></code></pre></div><p>If you add quotes <code>&quot;${name}&quot;</code>, it will produce a wrong command.</p><p>If you need to add something extra, consider putting it inside curly brackets.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">$</span><span style="color:#9ECBFF;">`mkdir ${&#39;path/to-dir/&#39;</span><span style="color:#9ECBFF;"> </span><span style="color:#F97583;">+</span><span style="color:#9ECBFF;"> </span><span style="color:#E1E4E8;">name</span><span style="color:#9ECBFF;">}`</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">$</span><span style="color:#032F62;">`mkdir ${&#39;path/to-dir/&#39;</span><span style="color:#032F62;"> </span><span style="color:#D73A49;">+</span><span style="color:#032F62;"> </span><span style="color:#24292E;">name</span><span style="color:#032F62;">}`</span></span></code></pre></div><p>This will also work properly:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">$</span><span style="color:#9ECBFF;">`mkdir path/to-dir/${</span><span style="color:#E1E4E8;">name</span><span style="color:#9ECBFF;">}`</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">$</span><span style="color:#032F62;">`mkdir path/to-dir/${</span><span style="color:#24292E;">name</span><span style="color:#032F62;">}`</span></span></code></pre></div><h3 id="array-of-arguments" tabindex="-1">Array of arguments <a class="header-anchor" href="#array-of-arguments" aria-label="Permalink to &quot;Array of arguments&quot;">​</a></h3><p>The <code>zx</code> can also take an array or arguments in the <code>${...}</code>. Items of the array will be quoted separately and concatenated via a space.</p><p>Do <strong>not</strong> add a <code>.join(&#39; &#39;)</code>.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> flags </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&#39;--oneline&#39;</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&#39;--decorate&#39;</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&#39;--color&#39;</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">]</span></span>\n<span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">$</span><span style="color:#9ECBFF;">`git log ${</span><span style="color:#E1E4E8;">flags</span><span style="color:#9ECBFF;">}`</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> flags </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&#39;--oneline&#39;</span><span style="color:#24292E;">,</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&#39;--decorate&#39;</span><span style="color:#24292E;">,</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&#39;--color&#39;</span><span style="color:#24292E;">,</span></span>\n<span class="line"><span style="color:#24292E;">]</span></span>\n<span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">$</span><span style="color:#032F62;">`git log ${</span><span style="color:#24292E;">flags</span><span style="color:#032F62;">}`</span></span></code></pre></div><p>If you already have a string with arrays, it&#39;s your responsibility to correctly parse it and distinguish separate arguments. For example like this:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">$</span><span style="color:#9ECBFF;">`git log ${&#39;--oneline --decorate --color&#39;</span><span style="color:#9ECBFF;">.</span><span style="color:#B392F0;">split</span><span style="color:#9ECBFF;">(</span><span style="color:#9ECBFF;">&#39; &#39;</span><span style="color:#9ECBFF;">)</span><span style="color:#9ECBFF;">}`</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">$</span><span style="color:#032F62;">`git log ${&#39;--oneline --decorate --color&#39;</span><span style="color:#032F62;">.</span><span style="color:#6F42C1;">split</span><span style="color:#032F62;">(</span><span style="color:#032F62;">&#39; &#39;</span><span style="color:#032F62;">)</span><span style="color:#032F62;">}`</span></span></code></pre></div><h3 id="globbing-and" tabindex="-1">globbing and <code>~</code> <a class="header-anchor" href="#globbing-and" aria-label="Permalink to &quot;globbing and `~`&quot;">​</a></h3><p>As everything passed through <code>${...}</code> will be escaped, you can&#39;t use <code>~</code> or glob syntax.</p><p>In order for this to work the zx provides <a href="./getting-started#globby-package">globby package</a>.</p><p>For instead of this:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> files </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;~/dev/**/*.md&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// wrong</span></span>\n<span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">$</span><span style="color:#9ECBFF;">`ls ${</span><span style="color:#E1E4E8;">files</span><span style="color:#9ECBFF;">}`</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> files </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;~/dev/**/*.md&#39;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// wrong</span></span>\n<span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">$</span><span style="color:#032F62;">`ls ${</span><span style="color:#24292E;">files</span><span style="color:#032F62;">}`</span></span></code></pre></div><p>Use <code>glob</code> function and <code>os</code> package:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> files </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">glob</span><span style="color:#E1E4E8;">(os.</span><span style="color:#B392F0;">homedir</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;/dev/**/*.md&#39;</span><span style="color:#E1E4E8;">)</span></span>\n<span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">$</span><span style="color:#9ECBFF;">`ls ${</span><span style="color:#E1E4E8;">files</span><span style="color:#9ECBFF;">}`</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> files </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">glob</span><span style="color:#24292E;">(os.</span><span style="color:#6F42C1;">homedir</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;/dev/**/*.md&#39;</span><span style="color:#24292E;">)</span></span>\n<span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">$</span><span style="color:#032F62;">`ls ${</span><span style="color:#24292E;">files</span><span style="color:#032F62;">}`</span></span></code></pre></div>',23),e=[p];function t(c,r,i,y,d,E){return a(),n("div",null,e)}const h=s(l,[["render",t]]);export{g as __pageData,h as default};
